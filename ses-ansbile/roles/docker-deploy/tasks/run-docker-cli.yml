---


- name: Pull the specified Docker image
  docker_image:
    state: present
    source: pull
    name: "{{ docker_image }}"
  become: "{{ docker_container_become | default(false, true) }}"

- name: Create the container environments variable file
  copy:
    dest: '/tmp/docker-cli-env-vars.txt'
    content: |
      {% for item in container_environment_variables | dict2items %}
      {{ item.key }}="{{ item.value }}"
      {% endfor %}
  when:
    - container_environment_variables is defined
    - container_environment_variables | length > 0

- name: Create and start the containers via Docker CLI
  docker_container:
    state: started
    name: "{{ container_name | default(omit, true) }}"
    image: "{{ docker_image }}"
    hostname: "{{ container_hostname | default(omit, true) }}"
    restart_policy: "{{ container_restart_policy | default(omit, true) }}"
    published_ports: "{{ container_ports | default(omit, true) }}"
    volumes: "{{ container_volumes | default(omit, true) }}"
    env_file: "{{ '/tmp/docker-cli-env-vars.txt' if container_environment_variables is defined and container_environment_variables | length > 0 else none | default(omit) }}"
  register: docker_container_results
  become: "{{ docker_container_become | default(false, true) }}"

- name: Output Docker CLI when creating the containers
  debug:
    var: docker_container_results

- name: Remove the container environments variable file
  file:
    state: absent
    path: '/tmp/docker-cli-env-vars.txt'

...